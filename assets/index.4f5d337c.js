const w=function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function t(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerpolicy&&(n.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?n.credentials="include":e.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(e){if(e.ep)return;e.ep=!0;const n=t(e);fetch(e.href,n)}};w();const g=[{type:"title",active:!1,title:"Install/Update"},{type:"checkList",active:!1,title:"Extension refresh notification.",tooltip:'If you install or update an extension while connected to "Meet", you will be guided to refresh with Toast.'}],k=[{type:"title",active:!1,title:"Connection"},{type:"checkList",active:!0,title:"Make sure the meeting has started.",tooltip:"After accessing https://meet.google.com/${meetId}, click the Join Now button to access the meeting, and you will be connected to the room corresponding to meetId."},{type:"checkList",active:!1,title:"Allow attendees to draw.",tooltip:"When connecting to the meetId room, if there is a main presenter, you can draw on the presentation screen."}],I=[{type:"title",active:!1,title:"Publication"},{type:"checkList",active:!0,title:"Make sure the presentation has started.",tooltip:"Click the Start Presentation button at the bottom of the Meet screen to start your presentation, and you will become the main presenter in Meet."},{type:"checkList",active:!0,title:"Attempt to run host.",tooltip:"Run the installed host scheme when you become the main presenter."},{type:"checkList",active:!1,title:"Guide to install host.",tooltip:"If the host is not installed, it guides the installation in a modal way."},{type:"checkList",active:!0,title:"Notify attendees of the start.",tooltip:"If Host is a running presenter, it sends a presentation screen identifier to the attendees in the corresponding meetId room."},{type:"checkList",active:!1,title:"Multi-presenter support.",tooltip:'If there are multiple presenters, the active presenter will share the "meetId" and the remaining presenters will be put on hold.'}],_=[{type:"title",active:!1,title:"Drawing"},{type:"checkList",active:!0,title:"Draw on the Meet screen.",tooltip:"If the main presenter's presentation screen identifier is transmitted, it can be drawn on the corresponding screen."},{type:"checkList",active:!0,title:"Drawable Notification.",tooltip:"It shows the status that drawing is possible on the presentation screen."},{type:"checkList",active:!0,title:"Turn drawing mode on/off.",tooltip:"You can turn the drawing behavior on and off in the extension popup."},{type:"checkList",active:!1,title:"Support for various drawing tools.",tooltip:"Provides a toolbar window where you can select color, shape, etc."}],L=[...g,...k,...I,..._];function E(r){const i=document.querySelector("h1");if(!i)return;const t=i.getBoundingClientRect(),o=(r.x-(t.x+t.width/2))/(window.innerWidth/2)*-1,e=(r.y-(t.y+t.height/2))/(window.innerHeight/2)*-1;i.style.setProperty("--shadow-x",`${o}rem`),i.style.setProperty("--shadow-y",`${e}rem`)}window.addEventListener("mousemove",E);function s(r,i,t){const o=document.createElement(r);return i&&Object.keys(i).forEach(e=>{o.setAttribute(e,i[e])}),t&&o.append(...t),o}function N(r,i=""){const t=Object.keys(r),o=s("div",{class:"slider"}),e=s("div",{class:"slider__header"}),n=s("div",{class:"slider__body"}),c=s("div",{class:"slider__prev"},["<"]),a=s("div",{class:"slider__title"}),p=s("div",{class:"slider__next"},[">"]);o.appendChild(e),o.appendChild(n),e.appendChild(c),e.appendChild(a),e.appendChild(p);const u=t.findIndex(d=>d===i);let l=u>=0?u:0;const y=()=>{l=t[l+1]?l+1:0,h()},v=()=>{l=t[l-1]?l-1:t.length-1,h()},h=()=>{const d=t[l];a.innerText=d,n.innerText="",n.append(r[d])};return c.addEventListener("click",()=>v()),p.addEventListener("click",()=>y()),h(),o}function f(r){const i=s("div",{class:"todo-list"}),t=s("ul",{class:"todo-list__body"});return r.forEach(({type:o,title:e,active:n,tooltip:c})=>{const a=o==="checkList",p=s("li",{class:a?"todo-list__item":"todo-list__title"},[a?s("input",{id:e,type:"checkbox",onclick:"return false;",...n?{checked:"true"}:{}}):"",s("label",{for:e},[e]),a?s("span",{class:"todo-list__item__hover"},[c||e]):""]);t.appendChild(p)}),i.appendChild(t),i}const m=document.querySelector(".body");m&&m.appendChild(N({"Chrome Extension":s("div",{},[f(L)]),"Host / Server / Components":s("div",{},[f([{type:"title",title:"Host"},{type:"checkList",title:"I'm checking the specs."},{type:"title",title:"Server"},{type:"checkList",title:"I'm checking the specs."},{type:"title",title:"Components"},{type:"checkList",title:"I'm checking the specs."}])])}));
